{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","selectedYearVal","target","value","onReceiveSelect","selectVal","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","eachExpense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaxVal","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","selectYear","setSelectYear","filterExp","filter","each","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onHandleCancel","name","NewExpense","showExpForm","setShowExpForm","enteredExpenseData","random","onAddExpense","eventName","mockInitExpenses","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b79af323.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const handleSelect = (event) => {\r\n    const selectedYearVal = event.target.value;\r\n    props.onReceiveSelect(selectedYearVal);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={handleSelect} value={props.selectVal}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./Expenses.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((eachExpense) => {\r\n        return (\r\n          <ExpenseItem\r\n            key={eachExpense.id}\r\n            title={eachExpense.title}\r\n            amount={eachExpense.amount}\r\n            date={eachExpense.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            value={dataPoint.value}\r\n            maxValue={totalMaxVal}\r\n            label={dataPoint.label}\r\n            key={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from './ExpensesChart'\r\n\r\nconst Expenses = (props) => {\r\n  const [selectYear, setSelectYear] = useState(\"2020\");\r\n\r\n  const carrySelectedYearCDH = (selectedYear) => {\r\n    setSelectYear(selectedYear);\r\n  };\r\n\r\n  const filterExp = props.items.filter((each) => {\r\n    return each.date.getFullYear().toString() === selectYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectVal={selectYear}\r\n          onReceiveSelect={carrySelectedYearCDH}\r\n        />\r\n        <ExpensesChart expenses={filterExp}/>\r\n        {/*ExpensesList cmp start*/}\r\n        <ExpensesList items={filterExp} />\r\n        {/*ExpensesList cmp End*/}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  /*const [userInput, setUserInput] = useState({\r\n    enteredTitle: \"\",\r\n    enteredAmount: \"\",\r\n    enteredDate: \"\",\r\n  });*/\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    /*setUserInput({\r\n      ...userInput,\r\n      enteredTitle: event.target.value,\r\n    });*/\r\n    /*setUserInput((prevInput) => {\r\n        return {...prevInput, enteredTitle: event.target.value};\r\n    });*/\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //let hideAddNewExp = true;\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    props.onHandleCancel(\"cancel\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n          <div className=\"new-expense__control\">\r\n            <label>Title</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={titleChangeHandler}\r\n              value={enteredTitle}\r\n            ></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Amount</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0.01\"\r\n              step=\"0.01\"\r\n              onChange={amountChangeHandler}\r\n              value={enteredAmount}\r\n            ></input>\r\n          </div>\r\n          <div className=\"new-expense__control\">\r\n            <label>Date</label>\r\n            <input\r\n              type=\"date\"\r\n              min=\"2019-01-01\"\r\n              max=\"2022-12-31\"\r\n              onChange={dateChangeHandler}\r\n              value={enteredDate}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button onClick={handleCancel} name=\"cancel\">\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\" name=\"addExpense\">\r\n            Add Expense\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n    setShowExpForm(false);\r\n  };\r\n\r\n  const [showExpForm, setShowExpForm] = useState(false);\r\n  const showExpFormHandler = () => {\r\n    setShowExpForm(true);\r\n  };\r\n\r\n  const handleCancel = (eventName) => {\r\n    if (eventName === \"cancel\") {\r\n      setShowExpForm(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {showExpForm ? (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onHandleCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <button onClick={showExpFormHandler} name=\"addNewExpBtn\">\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst mockInitExpenses = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(mockInitExpenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}